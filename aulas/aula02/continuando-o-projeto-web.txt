Fontes:

Roboto_Flex as Roboto
Bai_Jamjuree as BaiJamjuree

const roboto = Roboto({subsets: ['latin'], variable: '--font-roboto' })
const baiJamjuree = BaiJamjuree({subsets: ['latin'], weight: 700, variable: '--font-bai-jamjuree' })


o next ele importa a fonte e cria um variavel var(--font-roboto) para quando quiser utilizar essa fonte.

após isso coloca nas propriedades e realiza a configuração no tailwind.config.js no extend: {}

fontFamily: {
sans: 'var(--font-roboto',
}

${} = interpolação 

configura as cores do figma no projeto em tailwind.config.js criando no extend o colors: {
gray: {
50: '#eaeaea',
100:'#bebebf',
200: '#9e9ea0',
300: '#727275',
400: '#56565a',
500: '#2c2c31',
600: '#28282d',
700: '#1f1f23',
800: '#18181b',
900: '#121215',
}
}

e repetir o mesmo passo à passo nas demais cores purple, orange, yellow, green. (basta seguir o figma)

importar pacote de icons

npm i lucide-react

npx expo start --clear

npx expo install react-native-svg

npm i -D react-native-svg-transformer


no server é necessário criar mais um Model que vai ser o de Memoria
onde nele vai ter id, userid, coverurl, content, ispublic  e createdat e vão existir o relacionamento do usuario com a memoria, logo

isso no model Memory
user User @relation(fields: (userId), references: [id])
e ja no model User
memories Memory[]

npx prisma migrate dev - para fazer alterações na bd.

npx prisma studio

npx prisma migrate reset

criar um arquivo separado chamado memories.ts para ser realizado a gestão das memorias em rotas.

npm i zod - validação dos ids

npm i @fastify/cors - tecnica de segurança (backend) quais urls/endereços vão poder acessar a api.

para colocar em produção

origin: ['link do projeto']